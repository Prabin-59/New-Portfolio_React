{"ast":null,"code":"var _jsxFileName = \"D:\\\\Prabin\\\\standalone-portfolio\\\\src\\\\components\\\\ThemeToggle.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Moon, Sun } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ThemeToggle() {\n  _s();\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  useEffect(() => {\n    // Check for dark mode preference\n    const isDark = localStorage.theme === 'dark' || !('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches;\n    setIsDarkMode(isDark);\n    if (isDark) {\n      document.documentElement.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n    }\n  }, []);\n  const toggleTheme = () => {\n    const newMode = !isDarkMode;\n    setIsDarkMode(newMode);\n    if (newMode) {\n      document.documentElement.classList.add('dark');\n      localStorage.theme = 'dark';\n    } else {\n      document.documentElement.classList.remove('dark');\n      localStorage.theme = 'light';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: toggleTheme,\n    className: \"w-10 h-10 rounded-full bg-muted flex items-center justify-center transition-colors hover:bg-muted/80\",\n    \"aria-label\": isDarkMode ? \"Switch to light mode\" : \"Switch to dark mode\",\n    children: isDarkMode ? /*#__PURE__*/_jsxDEV(Sun, {\n      className: \"h-5 w-5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Moon, {\n      className: \"h-5 w-5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(ThemeToggle, \"bUs4CHDjU8AH+ZZYt8wlh4bHppI=\");\n_c = ThemeToggle;\nvar _c;\n$RefreshReg$(_c, \"ThemeToggle\");","map":{"version":3,"names":["React","useEffect","useState","Moon","Sun","jsxDEV","_jsxDEV","ThemeToggle","_s","isDarkMode","setIsDarkMode","isDark","localStorage","theme","window","matchMedia","matches","document","documentElement","classList","add","remove","toggleTheme","newMode","onClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Prabin/standalone-portfolio/src/components/ThemeToggle.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Moon, Sun } from 'lucide-react';\n\nexport default function ThemeToggle() {\n  const [isDarkMode, setIsDarkMode] = useState(false);\n\n  useEffect(() => {\n    // Check for dark mode preference\n    const isDark = localStorage.theme === 'dark' || \n      (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches);\n    \n    setIsDarkMode(isDark);\n    \n    if (isDark) {\n      document.documentElement.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n    }\n  }, []);\n\n  const toggleTheme = () => {\n    const newMode = !isDarkMode;\n    setIsDarkMode(newMode);\n    \n    if (newMode) {\n      document.documentElement.classList.add('dark');\n      localStorage.theme = 'dark';\n    } else {\n      document.documentElement.classList.remove('dark');\n      localStorage.theme = 'light';\n    }\n  };\n\n  return (\n    <button \n      onClick={toggleTheme}\n      className=\"w-10 h-10 rounded-full bg-muted flex items-center justify-center transition-colors hover:bg-muted/80\"\n      aria-label={isDarkMode ? \"Switch to light mode\" : \"Switch to dark mode\"}\n    >\n      {isDarkMode ? (\n        <Sun className=\"h-5 w-5\" />\n      ) : (\n        <Moon className=\"h-5 w-5\" />\n      )}\n    </button>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,GAAG,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEnDD,SAAS,CAAC,MAAM;IACd;IACA,MAAMU,MAAM,GAAGC,YAAY,CAACC,KAAK,KAAK,MAAM,IACzC,EAAE,OAAO,IAAID,YAAY,CAAC,IAAIE,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAQ;IAE3FN,aAAa,CAACC,MAAM,CAAC;IAErB,IAAIA,MAAM,EAAE;MACVM,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;IAChD,CAAC,MAAM;MACLH,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC;IACnD;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,OAAO,GAAG,CAACd,UAAU;IAC3BC,aAAa,CAACa,OAAO,CAAC;IAEtB,IAAIA,OAAO,EAAE;MACXN,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;MAC9CR,YAAY,CAACC,KAAK,GAAG,MAAM;IAC7B,CAAC,MAAM;MACLI,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC;MACjDT,YAAY,CAACC,KAAK,GAAG,OAAO;IAC9B;EACF,CAAC;EAED,oBACEP,OAAA;IACEkB,OAAO,EAAEF,WAAY;IACrBG,SAAS,EAAC,sGAAsG;IAChH,cAAYhB,UAAU,GAAG,sBAAsB,GAAG,qBAAsB;IAAAiB,QAAA,EAEvEjB,UAAU,gBACTH,OAAA,CAACF,GAAG;MAACqB,SAAS,EAAC;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAE3BxB,OAAA,CAACH,IAAI;MAACsB,SAAS,EAAC;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAC5B;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEb;AAACtB,EAAA,CA3CuBD,WAAW;AAAAwB,EAAA,GAAXxB,WAAW;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}